
.. 212.rst

212. Data Transmission
========================
``time limit per test: 0.25 sec / memory limit per test: 65536 KB``

Recently one known microprocessor productioner has developed the new type of microprocessors that can be used in difficult mathematical calculations. The processor contains N so called nodes that are connected by M channels. Data organized in packets, pass from source node to target node by channels and are processed by the intermediate nodes. 

Each node has its level that determines the type of work this node does. The source node has level 1 while the target node has level L. For data to be correctly processed each packet of it must pass in order all nodes with levels from 1 to L — that is, first it must be processed by the source node, after that by some node of level 2, so on, and finally by the target node. 

Nodes can process as much data as they are asked to, however channels can only transmit the limited amount of data in a unit of time. For synchronization reasons, any data can only be transmitted from a node with level i to some node with level i+1 and cannot be transmitted between nodes which levels differ by more than one or from a node of higher level to a node of lower level. Nodes are so fast that they can process data packet immediately, so as soon as it reaches the node it is ready to be transmitted to the node of the next level. 

No data should stall in any node and no node can produce its own data, so each unit of time the number of packets coming to any node except source and target, must be equal to the number of packets leaving this node. 

The scheme of data transmission that satisfies the conditions provided is called the data flow. Data flow is called blocking if there is no way to increase the value of the data flow just increasing the amount of data passing by some channels (however, there may be the way to increase it, decreasing the amount of data for some channels and increasing for other ones). 

Your task is to find some blocking data flow for the microprocessor given its scheme. Note, that you need not find the maximal possible data flow, just any blocking one. 

**Input**

The first line of the input file contains three integer numbers — N, M and L :math:`(2 \le N \le 1,500, 1 \le M \le 300,000, 2 \le L \le N)`. Let nodes be numbered from 1 to N. The second line contains N integer numbers, i-th of them is the level li of the i-th node :math:`(1 \le li \le L)`. Only one node has level 1, that is the source node, and only one node has level L — that is the target node. 

Next M lines describe channels, each lines contains three integer numbers a, b and c — nodes connected by this channel and its capacity in packets per unit of time :math:`(1 \le a, b \le N, lb = la + 1, 1 \le c \le 10^6)`. 

Two nodes can be connected by at most one channel. 

**Output**

Output the description of the data flow found. Output file must contain M lines, they must correspond to channels and contain the amount of data transmitted by the channel in a unit of time. Channels must be listed in the order they are specified in the input file. 

**Example(s)**

+----------------+----------------+
|Sample Input    |Sample Output   |
+----------------+----------------+
| | 6 7 4        | | 3            |
| | 1 2 3 4 3 2  | | 3            |
| | 1 2 3        | | 4            |
| | 2 3 3        | | 4            |
| | 3 4 4        | | 1            |
| | 1 6 4        | | 3            |
| | 6 3 2        | | 3            |
| | 5 4 3        |                |
| | 6 5 4        |                |
+----------------+----------------+
