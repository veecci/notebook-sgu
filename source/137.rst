
.. 137.rst

137. Funny Strings
====================
``time limit per test: 0.25 sec / memory limit per test: 4096 KB``

Let's consider a string of non-negative integers, containing N elements. Suppose these elements are :math:`S_1 S_2 .. S_N`, in the order in which they are placed inside the string. Such a string is called 'funny' if the string :math:`S_1+1 S_2 S_3 .. S_{N-1} S_N -1` can be obtained by rotating the first string (to the left or to the right) several times. For instance, the strings 2 2 2 3 and 1 2 1 2 2 are funny, but the string 1 2 1 2 is not. Your task is to find a funny string having N elements, for which the sum of its elements :math:`(S_1+S_2+..+S_N)` is equal to K.

**Input**

The input contains two integers: N :math:`(2 \le N \le 1000)` and K :math:`(1 \le K \le 30000)`. Moreover, GCD(N,K)=1 (it can be proven that this is a necessary condition for a string to be funny).

**Output**

You should output one line containing the elements of the funny string found. These integers should be separated by blanks.

**Hint**

GCD(A,B) = the greatest common divisor of A and B. 
The 'funny' strings are also named Euclid strings in several papers.

**Example(s)**

+----------------+---------------------+
|Sample Input    |Sample Output        |
+----------------+---------------------+
| | 9 16         | | 1 2 2 2 1 2 2 2 2 |
+----------------+---------------------+
